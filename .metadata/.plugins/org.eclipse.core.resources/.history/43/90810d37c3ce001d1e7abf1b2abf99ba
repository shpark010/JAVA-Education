/*
시나리오(요구사항)
저희는 가전제품 매장 솔루션을 개발하는 사업팀입니다
A라 전자제품 매장이 오픈되면

[클라이언트 요구사항]
가전제품은 제품의 가격 , 제품의 포인트 정보를 모든 제품이 가지고 있습니다
각각의 가전제품은 제품별 고유한 이름정보를 가지고 있다
ex)
각각의 전자제품은 이름을 가지고 있다 (ex) Tv , Audio , Computer
각각의 전자제품은 다른 가격정보를 가지고 있다( Tv:5000 , Audio : 6000)
제품의 포인트는 가격의 10%적용한다

시뮬레이션 시나리오
구매자: 제품을 구매하기 위한 금액정보 , 포인트 정보를 가지고 있다
ex) 10만원 , 포인트 0
구매자는 제품을 구매할 수 있다 , 구매행위를 하게 되면 가지고 있는 돈은 감소하고 (가격) 포인트는 증가한다
구매자는 처음 초기 금액을 가질 수 있다
*/
class Product {
	int price;
	int bonuspoint;
	
	Product(int price) {
		this.price = price;
		this.bonuspoint = (int)(this.price/10.0);
	}
}

class KtTv extends Product {
	KtTv() {
		super(5000);
	}

	@Override
	public String toString() {
		return "KtTv";
	}
	
}

class Audio extends Product {
	Audio() {
		super(100);
	}
	
	@Override
	public String toString() {
		return "Audio";
	}
	
}

class NoteBook extends Product {
	NoteBook() {
		super(150);
	}
	
	@Override
	public String toString() {
		return "NoteBook";
	}
	
}

class Buyer {
	int money = 5000;
	int bonuspoint;
	
	//제품을 구매 할 수 있는 기능 ( 3개 구매기능 _
	//구매 = 내 잔액 - 제품의 가격 | 포인트 갱신
	//tv구매
	void ktTvBuy(KtTv n) {
		if(this.money < n.price) {
			System.out.println("고객님 잔액이 부족합니다.^^ 잔액 : " + this.money);
			return;	//함수의 강제 종료
		}
		this.money = this.money - n.price;
		this.bonuspoint += n.bonuspoint;
		System.out.println("구매하신 물건 : " + n.toString());
	}
	
	void audioBuy(Audio n) {
		if(this.money < n.price) {
			System.out.println("고객님 잔액이 부족합니다.^^ 잔액 : " + this.money);
			return;	//함수의 강제 종료
		}
		this.money = this.money - n.price;
		this.bonuspoint += n.bonuspoint;
		System.out.println("구매하신 물건 : " + n.toString());
	}
	
	void noteBookBuy(NoteBook n) {
		if(this.money < n.price) {
			System.out.println("고객님 잔액이 부족합니다.^^ 잔액 : " + this.money);
			return;	//함수의 강제 종료
		}
		this.money = this.money - n.price;
		this.bonuspoint += n.bonuspoint;
		System.out.println("구매하신 물건 : " + n.toString());
	}
}


public class Ex12_Inherit_KeyPoint {

	public static void main(String[] args) {
		//가오픈 생각하고 매장..
		KtTv kt = new KtTv();
		Audio audio = new Audio();
		NoteBook notebook = new NoteBook();
		
		Buyer buyer = new Buyer();
	}

}

